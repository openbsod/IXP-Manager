<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;

use Entities\Cabinet as CabinetEntity;
use Entities\Location as LocationEntity;

/**
 * Cabinet
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Cabinet extends EntityRepository
{
    /**
     * Return an array of all cabinets names where the array key is the cabinet id.
     * @return array An array of all cabinets names with the cabinet id as the key.
     */
    public function getAsArray(): array {
        $cabinets = [];
        foreach( self::findAll() as $cabinet ) {
            $cabinets[ $cabinet->getId() ] = $cabinet->getName() . ' [' . $cabinet->getCololocation() . ']';
        }

        return $cabinets;
    }

    /**
     * Return an array of all cabinets names grouped by locations
     *
     * E.g.:
     *      [
     *          1 => [
     *              "id" => 1,
     *              "name" => "Equinix Kilcarbery",
     *              "shortname" => "DEG-KCP",
     *              "tag" => "deg1",
     *              "cabinets" => [
     *                  1 => [  // indexed by cabinet ID
     *                      "id" => 1,
     *                      "name" => "INEX-DEGK-1",
     *                  ],
     *                  2 => [
     *                      "id" => 2,
     *                      "name" => "INEX-DEGK-2",
     *                  ],
     *                  ...
     *
     * @return array An array of all cabinets names with the cabinet id as the key.
     */
    public function getByLocationAsArray(): array {
        $locations = $this->getEntityManager()->getRepository( LocationEntity::class )->getAsArray();

        foreach( $locations as $i => $l ) {
            $locations[$i]['cabinets'] = [];
        }

        foreach( $this->findAll() as $c ) {
            /** @var CabinetEntity $c */
            $locations[ $c->getLocation()->getId() ]['cabinets'][ $c->getId() ] = [
                'id'        => $c->getId(),
                'name'      => $c->getName(),
            ];
        }

        return $locations;
    }

    /**
     * Get all cabinets (or a particular one) for listing on the frontend CRUD
     *
     * @see \IXP\Http\Controllers\Doctrine2Frontend
     *
     *
     * @param \stdClass $feParams
     * @param int|null $id
     * @return array Array of cabinets (as associated arrays) (or single element if `$id` passed)
     */
    public function getAllForFeList( \stdClass $feParams, int $id = null )
    {
        $dql = "SELECT  c.id as id, 
                        c.name as name, 
                        c.cololocation as cololocation, 
                        c.height AS height,
                        c.type AS type, 
                        c.notes AS notes, 
                        c.u_counts_from AS u_counts_from, 
                        l.id AS locationid, 
                        l.name AS location
                FROM Entities\\Cabinet c
                LEFT JOIN c.Location l
                WHERE 1 = 1";

        if( $id ) {
            $dql .= " AND c.id = " . (int)$id;
        }

        if( isset( $feParams->listOrderBy ) ) {
            $dql .= " ORDER BY " . $feParams->listOrderBy . ' ';
            $dql .= isset( $feParams->listOrderByDir ) ? $feParams->listOrderByDir : 'ASC';
        }

        $query = $this->getEntityManager()->createQuery( $dql );

        return $query->getArrayResult();
    }

}
